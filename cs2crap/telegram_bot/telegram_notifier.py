import requests
from typing import Optional
from requests.exceptions import RequestException, Timeout, ConnectTimeout

from cs2crap.telegram_bot.utils import get_bot_data
from cs2crap.common.utils import escape_url, color_print
from cs2crap.common.price_comparison import (
    stm2stm_comparison,
    csm2stm_comparison,
    stm2csm_comparison,
)


BOT_TOKEN, TELEGRAM_API_URL, CHAT_ID = get_bot_data()


# ==================================================================================================================================
# |                                                        TELEGRAM NOTIFIER                                                       |
# ==================================================================================================================================


def send_message(message: str) -> Optional[dict]:
    """
    –õ–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–º.

    Parameters:
        - message (str): –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.

    Returns:
        - Optional[dict]: –û—Ç–≤–µ—Ç API –¢–µ–ª–µ–≥—Ä–∞–º–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.
    """

    params = {"chat_id": CHAT_ID, "text": message, "parse_mode": "Markdown"}

    max_retries: int = 3

    for attempt in range(max_retries):
        try:
            response = requests.post(TELEGRAM_API_URL, params=params, timeout=1)
            response.raise_for_status()
            return response.json()
        except ConnectTimeout as connect_timeout_error:
            color_print(
                "fail",
                "fail",
                f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É Telegram: {connect_timeout_error}",
                True,
            )
        except (RequestException, Timeout) as other_error:
            color_print(
                "fail",
                "fail",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {other_error}",
                True,
            )


# ==================================================================================================================================


def stm2stm_message(
    item_name: str, volume: int, price_buy: float, price_sell: float, item_href: str
) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–µ–¥–º–µ—Ç–µ –º–µ—Ç–æ–¥–∞ Steam -> Steam

    Parameters:
        - item_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞.
        - volume (int): –û–±—ä–µ–º –ø—Ä–æ–¥–∞–∂ –∑–∞ —Å—É—Ç–∫–∏.
        - price_buy (float): –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏.
        - price_sell (float): –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏.
        - item_href (str): –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç.

    Returns:
        - None
    """
    send_message(
        f"""
–ù–∞–π–¥–µ–Ω –ø—Ä–µ–¥–º–µ—Ç: *{item_name}*

üìà –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏: *{price_sell}* ‚ÇΩ
üìâ –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: *{price_buy}* ‚ÇΩ
üöÄ –ü—Ä–∏–±—ã–ª—å: *{round(((float(price_buy) * 0.87) - float(price_sell)) / float(price_sell) * 100)}%*

üî• *{volume}* –ø—Ä–æ–¥–∞–∂(–∏) –∑–∞ —Å—É—Ç–∫–∏

üß∞ –ú–µ—Ç–æ–¥: *Steam to Steam*

üîó [–ü—Ä–µ–¥–º–µ—Ç –Ω–∞ Steam Market]({item_href})"""
    )


# ==================================================================================================================================


def csm2stm_message(
    item_name: str,
    volume: int,
    price_buy: float,
    price_sell: float,
    item_href: str,
    result_buy: Optional[bool],
    result_sell: Optional[bool],
    csgomarket_item_price: float,
):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–µ–¥–º–µ—Ç–µ –º–µ—Ç–æ–¥–∞ CS:GO Market -> Steam.

    Parameters:
        - item_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞.
        - volume (int): –û–±—ä–µ–º –ø—Ä–æ–¥–∞–∂ –∑–∞ —Å—É—Ç–∫–∏.
        - price_buy (float): –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏.
        - price_sell (float): –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏.
        - item_href (str): –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç.
        - result_buy (Optional[bool]): –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∫—É–ø–∫–∏.
        - result_sell (Optional[bool]): –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–¥–∞–∂–∏.
        - csgomarket_item_price (float): –¶–µ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞ CS:GO Market.

    Returns:
        - None
    """

    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ csgo market
    escaped_csgomarket_url = escape_url(
        f"https://market.csgo.com/ru/?search={item_name}"
    )

    send_message(
        f"""
–ù–∞–π–¥–µ–Ω –ø—Ä–µ–¥–º–µ—Ç: *{item_name}*
{'\n' + 'üî•üî•üî• *AUTOBUY* üî•üî•üî•\n' if result_sell else ''}
üìà –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏: *{csgomarket_item_price}* ‚ÇΩ
üìâ –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: *{price_sell if result_sell else price_buy}* ‚ÇΩ
üöÄ –ü—Ä–∏–±—ã–ª—å: *{round(((float(price_sell) * 0.87) - csgomarket_item_price) / csgomarket_item_price * 100) if result_sell 
                else round(((float(price_buy) * 0.87) - csgomarket_item_price) / csgomarket_item_price * 100) if result_buy 
                else None}%*

üî• *{volume}* –ø—Ä–æ–¥–∞–∂(–∏) –≤ *Steam* –∑–∞ —Å—É—Ç–∫–∏

üß∞ –ú–µ—Ç–æ–¥: *CS:GO Market* to *Steam*

üîó [–ü—Ä–µ–¥–º–µ—Ç –Ω–∞ CS:GO Market]({escaped_csgomarket_url})
üîó [–ü—Ä–µ–¥–º–µ—Ç –Ω–∞ Steam Market]({item_href})"""
    )


# ==================================================================================================================================


def stm2csm_message(
    item_name: str,
    volume: int,
    price_buy: float,
    price_sell: float,
    item_href: str,
    result_buy: Optional[bool],
    result_sell: Optional[bool],
    csgomarket_item_price: float,
) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–µ–¥–º–µ—Ç–µ –º–µ—Ç–æ–¥–∞ Steam -> CS:GO Market.

    Parameters:
        - item_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞.
        - volume (int): –û–±—ä–µ–º –ø—Ä–æ–¥–∞–∂ –∑–∞ —Å—É—Ç–∫–∏.
        - price_buy (float): –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏.
        - price_sell (float): –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏.
        - item_href (str): –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç.
        - result_buy (Optional[bool]): –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∫—É–ø–∫–∏.
        - result_sell (Optional[bool]): –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–¥–∞–∂–∏.
        - csgomarket_item_price (float): –¶–µ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞ CS:GO Market.

    Returns:
        - None
    """

    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ csgo market
    escaped_csgomarket_url = escape_url(
        f"https://market.csgo.com/ru/?search={item_name}"
    )

    send_message(
        f"""
–ù–∞–π–¥–µ–Ω –ø—Ä–µ–¥–º–µ—Ç: *{item_name}*
{'\n' + 'üî•üî•üî• *FAST BUY* üî•üî•üî•\n' if result_buy else ''}
üìà –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏: *{price_buy if result_buy else price_sell}* ‚ÇΩ
üìâ –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: *{csgomarket_item_price}* ‚ÇΩ
üöÄ –ü—Ä–∏–±—ã–ª—å: *{round(((csgomarket_item_price * 0.95) - float(price_buy)) / float(price_buy) * 100) if result_buy  
                else round(((csgomarket_item_price * 0.95) - float(price_sell)) / float(price_sell) * 100) if result_sell 
                else None}%*

üî• *{volume}* –ø—Ä–æ–¥–∞–∂(–∏) –≤ *Steam* –∑–∞ —Å—É—Ç–∫–∏

üß∞ –ú–µ—Ç–æ–¥: *Steam* to *CS:GO Market*

üîó [–ü—Ä–µ–¥–º–µ—Ç –Ω–∞ Steam Market]({item_href})
üîó [–ü—Ä–µ–¥–º–µ—Ç –Ω–∞ CS:GO Market]({escaped_csgomarket_url})"""
    )


# ==================================================================================================================================


def message_sending(
    item_name: str,
    volume: int,
    price_buy: float,
    price_sell: float,
    item_href: str,
    methods: dict[bool, bool, bool],
) -> None:
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ –ø—Ä–µ–¥–º–µ—Ç–µ.

    Parameters:
        - item_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞.
        - volume (int): –û–±—ä–µ–º –ø—Ä–æ–¥–∞–∂ –∑–∞ —Å—É—Ç–∫–∏.
        - price_buy (float): –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏.
        - price_sell (float): –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏.
        - item_href (str): –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç.

    Returns:
        - None
    """

    result_buy = None
    result_sell = None
    csgomarket_item_price = None

    # Steam to Steam
    if methods["STM2STM"]:
        if stm2stm_comparison(price_buy, price_sell):
            stm2stm_message(item_name, volume, price_buy, price_sell, item_href)

    # CS:GO Market to Steam
    if methods["CSM2STM"]:
        result = csm2stm_comparison(item_name, price_sell, price_buy)
        if result is not None:
            (
                csgomarket_item_price,
                result_buy,
                result_sell,
            ) = result

        if result_sell or result_buy:
            csm2stm_message(
                item_name,
                volume,
                price_buy,
                price_sell,
                item_href,
                result_buy,
                result_sell,
                csgomarket_item_price,
            )

    # Steam to CS:GO Market
    if methods["STM2CSM"]:
        result = stm2csm_comparison(item_name, price_sell, price_buy)
        if result is not None:
            (csgomarket_item_price, result_buy, result_sell) = result

        if result_sell or result_buy:
            stm2csm_message(
                item_name,
                volume,
                price_buy,
                price_sell,
                item_href,
                result_buy,
                result_sell,
                csgomarket_item_price,
            )


if __name__ == "__main__":
    send_message(
        r"""
    –ù–∞–π–¥–µ–Ω –ø—Ä–µ–¥–º–µ—Ç: *StatTrak‚Ñ¢ Masterminds Music Kit Box*

    üî•üî•üî• *AUTOBUY* üî•üî•üî•

    üìà –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏: *584.75* ‚ÇΩ
    üìâ –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: *779.92* ‚ÇΩ
    üöÄ –ü—Ä–∏–±—ã–ª—å: *27%*

    üî• *12* –ø—Ä–æ–¥–∞–∂(–∏) –≤ *Steam* –∑–∞ —Å—É—Ç–∫–∏

    üß∞ –ú–µ—Ç–æ–¥: *Steam* to *CS:GO Market*

    üîó [–ü—Ä–µ–¥–º–µ—Ç –Ω–∞ Steam Market](https://steamcommunity.com/market/listings/730/StatTrak%E2%84%A2%20Masterminds%20Music%20Kit%20Box)
    üîó [–ü—Ä–µ–¥–º–µ—Ç –Ω–∞ CS:GO Market](https://market.csgo.com/ru/?search=StatTrak%E2%84%A2%20Masterminds%20Music%20Kit%20Box)
    """
    )
